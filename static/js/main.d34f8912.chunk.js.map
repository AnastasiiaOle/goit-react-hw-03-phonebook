{"version":3,"sources":["App.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","onSubmit","props","reset","className","styles","form","this","label","input","type","pattern","title","required","onChange","button","Component","Filter","defaultProps","ContactList","contacts","onDeleteContact","ul","map","contact","li","onClick","id","App","filter","addContact","prevState","find","alert","shortid","generate","changeFilter","getFilterContacts","includes","deleteContact","localStorage","getItem","parsedContacts","JSON","parse","prevProps","nextContacts","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d34f8912.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"button\":\"ContactForm_button__1MLZK\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\"};","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport shorid from 'short-id';\nimport styles from './ContactForm.module.css';\n\n\n\n\nclass ContactForm extends Component {\nstatic propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n};\n\n    state = {\n        name: '',\n        number: '',\n    };\n\n    handleChange = event => {\n        const {name, value } = event.currentTarget;\n\n        this.setState({[name]: value});\n    };\n\n    handleSubmit = event => {\n        event.preventDefault();\n        const { name, number} = this.state;\n        const { onSubmit } = this.props;\n        onSubmit({name, number});\n\n        this.reset();\n    }\n\n    reset = () => {\n        this.setState({\n            name: '', number: ''\n        });\n    }\n\n    render() {\nreturn (\n<div>\n<form  className={styles.form}onSubmit={this.handleSubmit}>\n    <label className={styles.label}>\n        Name\n        <input className={styles.input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={this.state.name}\n            onChange={this.handleChange}\n        />\n    </label>\n    <label className={styles.label}>\n        Number\n        <input className={styles.input}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={this.state.number}\n            onChange={this.handleChange}\n        />\n    </label>\n    <button className ={styles.button}type='submit'>\n        Add contact\n    </button>\n</form>\n</div>\n);\n\n    }\n}\n\nexport default ContactForm;","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nconst Filter =({ value , onChange }) => {\n    return (\n        <label>\n            Find contacts by name <br />\n            <input\n                type=\"text\"\n                name=\"name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                required\n                value={value}\n                onChange={onChange}\n            />\n        </label>\n    );\n};\n\nFilter.defaultProps ={\n    value: '',\n};\n\nFilter.propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactList.module.css';\n\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n    return(\n        <ul className={styles.ul}>\n            {contacts.map(contact =>(\n              <li  className={styles.li}key={contact.id}>\n                  {contact.name}:{contact.number}\n                  <button className={styles.button}\n                  type ='button'\n                  onClick= {()=> onDeleteContact(contact.id)}>\n                      Delete\n                  </button>\n              </li>  \n            ))}\n        </ul>\n    );\n\n};\n\nContactList.propTypes = {\nvalue: PropTypes.string,\ncontacts: PropTypes.arrayOf(\n    PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string,\n        number: PropTypes.number,\n    }),\n),\nonDeleteContact: PropTypes.func,\n}\n\nexport default ContactList;","import React, {Component} from 'react';\nimport shortid from 'short-id';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\nimport styles from './App.module.css';\n\nclass App extends Component {\n\n  state = {\n    contacts: [\n      {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n      {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n      {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n      {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n    ],\n    filter: '',\n  };\n\ncomponentDidMount() {\n  const contacts =localStorage.getItem('contacts');\n  const parsedContacts =JSON.parse(contacts);\n\n  if (parsedContacts) {\n    this.setState({ contacts: parsedContacts});\n  }\n}\n\ncomponentDidUpdate(prevProps, prevState) {\n  const nextContacts = this.state.contacts;\n  const prevContacts = prevState.contacts;\n  \n  if(nextContacts !== prevContacts) {\n    localStorage.setItem('contacts', JSON.stringify(nextContacts));\n  }\n}\n\n\n  addContact = ({ name, number }) => {\n\n    this.setState(prevState => {\n        const { contacts } = prevState;\n        const result = contacts.find(contact => {\n            return (contact.name === name || contact.number === number)\n        });\n        if (result) {\n            alert(`${name} is already in contacts`);\n            return {\n                contacts\n            }\n        }\n        const contact = {\n            id: shortid.generate(),\n            name,\n            number,\n        }\n        return {\n            contacts: [...prevState.contacts, contact]\n        }\n    });\n}\n\n  changeFilter = event => {\n    this.setState({filter: event.currentTarget.value});\n  };\n\n  getFilterContacts = () => {\n    const { contacts, filter } = this.state;\n    if (!filter) {\n        return contacts;\n    }\n    const filteredContacts = contacts.filter(({ name }) => name.includes(filter))\n    return filteredContacts;\n}\n\n  deleteContact = id => {\n    this.setState(prevState =>({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n\n\n  render () {\n\n    const {filter} = this.state;\n    const getFilterContacts = this.getFilterContacts();\n\n    return (\n      <div className={styles.App}>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact}/>\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter}/>\n        <ContactList contacts ={getFilterContacts}\n        onDeleteContact ={this.deleteContact}/>\n      </div>\n    );\n  }\n  \n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"ContactList_ul__2SEi_\",\"li\":\"ContactList_li__1Dxk_\",\"button\":\"ContactList_button__1RuFy\"};"],"sourceRoot":""}